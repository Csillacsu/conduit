{"uid":"b13d7cbf303be025","name":"test_login","fullName":"test_conduit.test_conduit.TestConduit#test_login","historyId":"1364295df6123b1f7d0675ef0135443f","time":{"start":1681371592683,"stop":1681371603310,"duration":10627},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5610ca324243 <unknown>\n#1 0x5610ca0e87a6 <unknown>\n#2 0x5610ca12564d <unknown>\n#3 0x5610ca125761 <unknown>\n#4 0x5610ca160da4 <unknown>\n#5 0x5610ca1460ad <unknown>\n#6 0x5610ca15e932 <unknown>\n#7 0x5610ca145e53 <unknown>\n#8 0x5610ca1189ea <unknown>\n#9 0x5610ca119b2e <unknown>\n#10 0x5610ca378d5e <unknown>\n#11 0x5610ca37ca80 <unknown>\n#12 0x5610ca35e8b0 <unknown>\n#13 0x5610ca37db63 <unknown>\n#14 0x5610ca34ff75 <unknown>\n#15 0x5610ca3a0998 <unknown>\n#16 0x5610ca3a0b27 <unknown>\n#17 0x5610ca3bbc23 <unknown>\n#18 0x7ff4c5634b43 <unknown>","statusTrace":"self = <test_conduit.TestConduit object at 0x7ff0aee51900>\n\n    def test_login(self):\n        self.browser.find_element(By.XPATH, \"//a[@href='#/login']\").click()\n        element = wait_for_element(self.browser, \"//h1[contains(text(),'Sign in')]\")\n        self.browser.find_element(By.XPATH, \"//input[@placeholder='Email']\").send_keys(\"avokado02@blabla.com\")\n        self.browser.find_element(By.XPATH, \"//input[@placeholder='Password']\").send_keys(\"Avokado02\")\n        self.browser.find_element(By.XPATH, \"//button[contains(text(),'Sign in')]\").click()\n        # time.sleep(8)\n>       logout_btn = wait_for_element(self.browser, \"//a[@active-class='active']\")\n\ntest_conduit/test_conduit.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_conduit/functions.py:26: in wait_for_element\n    element = WebDriverWait(browser, 10).until(EC.presence_of_element_located((By.XPATH, value)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"86f03c26b0faf811478b58f46ccd5902\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7ff0aecfab90>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5610ca324243 <unknown>\nE       #1 0x5610ca0e87a6 <unknown>\nE       #2 0x5610ca12564d <unknown>\nE       #3 0x5610ca125761 <unknown>\nE       #4 0x5610ca160da4 <unknown>\nE       #5 0x5610ca1460ad <unknown>\nE       #6 0x5610ca15e932 <unknown>\nE       #7 0x5610ca145e53 <unknown>\nE       #8 0x5610ca1189ea <unknown>\nE       #9 0x5610ca119b2e <unknown>\nE       #10 0x5610ca378d5e <unknown>\nE       #11 0x5610ca37ca80 <unknown>\nE       #12 0x5610ca35e8b0 <unknown>\nE       #13 0x5610ca37db63 <unknown>\nE       #14 0x5610ca34ff75 <unknown>\nE       #15 0x5610ca3a0998 <unknown>\nE       #16 0x5610ca3a0b27 <unknown>\nE       #17 0x5610ca3bbc23 <unknown>\nE       #18 0x7ff4c5634b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1681371591271,"stop":1681371592683,"duration":1412},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1681371603366,"stop":1681371603423,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test_conduit"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az1131-280"},{"name":"thread","value":"3105-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_conduit.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b13d7cbf303be025.json","parameterValues":[]}